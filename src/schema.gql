# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Mutation {
  createRecharge(data: RechargeInput!, token: String!): Recharge!
  createRechargeByReservationId(data: RechargeByReservationIdInput!, token: String!): RechargeOutput!
  createRechargeReservation(data: RechargeReservationInput!, token: String!): RechargeReservationOutput!
  installStation(data: StationInput!, token: String!): SuitableStationsOutput!
  login(data: UserLoginInputData!): UserLoginOutputData
  register(data: UserRegisterInputData!): User!
  updateRechargeStatus(data: RechargeByIdInput!, token: String!): RechargeByIdOutput!
}

type Query {
  getSuitableStations(token: String!): [SuitableStationsOutput!]!
  listStationHistory(data: RechargelistByStationInput!, token: String!): [RechargeReservationOutput!]!
  listStations(token: String!): [StationsOutput!]!
}

type Recharge {
  end: DateTime!
  id: ID!
  reservation: Boolean!
  start: DateTime!
  stationId: ID!
  status: String!
  userId: ID!
}

input RechargeByIdInput {
  id: ID!
  status: String!
}

type RechargeByIdOutput {
  id: ID!
  status: String!
}

input RechargeByReservationIdInput {
  reservationId: ID!
}

input RechargeInput {
  end: DateTime!
  stationId: ID!
  userId: ID!
}

type RechargeOutput {
  end: DateTime!
  start: DateTime!
  stationId: ID!
  status: String!
  userId: ID!
}

input RechargeReservationInput {
  end: DateTime!
  start: DateTime!
  stationId: ID!
  userId: ID!
}

type RechargeReservationOutput {
  end: DateTime!
  id: ID!
  reservation: Boolean!
  start: DateTime!
  stationId: ID!
  status: String!
  userId: ID!
}

input RechargelistByStationInput {
  id: ID!
}

input StationInput {
  id: ID!
}

type StationsOutput {
  id: ID!
  planetId: ID!
  suitablePlanets: SuitableStationsOutput!
}

type SuitableStationsOutput {
  hasStation: Boolean!
  id: ID!
  mass: Float!
  name: String!
}

type User {
  createdAt: DateTime!
  email: String!
  id: ID!
  password: String!
}

input UserLoginInputData {
  email: String!
  password: String!
}

type UserLoginOutputData {
  email: String!
  id: String!
  token: String!
}

input UserRegisterInputData {
  email: String!
  password: String!
}